{
  "version": 3,
  "sources": ["../../../../../node_modules/rxjs/dist/esm5/internal/observable/dom/WebSocketSubject.js", "../../../../../node_modules/@ngxs/websocket-plugin/fesm2015/ngxs-websocket-plugin.js"],
  "sourcesContent": ["import { __assign, __extends } from \"tslib\";\nimport { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nvar DEFAULT_WEBSOCKET_CONFIG = {\n    url: '',\n    deserializer: function (e) { return JSON.parse(e.data); },\n    serializer: function (value) { return JSON.stringify(value); },\n};\nvar WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\nvar WebSocketSubject = (function (_super) {\n    __extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        var _this = _super.call(this) || this;\n        _this._socket = null;\n        if (urlConfigOrSource instanceof Observable) {\n            _this.destination = destination;\n            _this.source = urlConfigOrSource;\n        }\n        else {\n            var config = (_this._config = __assign({}, DEFAULT_WEBSOCKET_CONFIG));\n            _this._output = new Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                config.url = urlConfigOrSource;\n            }\n            else {\n                for (var key in urlConfigOrSource) {\n                    if (urlConfigOrSource.hasOwnProperty(key)) {\n                        config[key] = urlConfigOrSource[key];\n                    }\n                }\n            }\n            if (!config.WebSocketCtor && WebSocket) {\n                config.WebSocketCtor = WebSocket;\n            }\n            else if (!config.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            _this.destination = new ReplaySubject();\n        }\n        return _this;\n    }\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this._config, this.destination);\n        sock.operator = operator;\n        sock.source = this;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this._socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject();\n        }\n        this._output = new Subject();\n    };\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable(function (observer) {\n            try {\n                self.next(subMsg());\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            var subscription = self.subscribe({\n                next: function (x) {\n                    try {\n                        if (messageFilter(x)) {\n                            observer.next(x);\n                        }\n                    }\n                    catch (err) {\n                        observer.error(err);\n                    }\n                },\n                error: function (err) { return observer.error(err); },\n                complete: function () { return observer.complete(); },\n            });\n            return function () {\n                try {\n                    self.next(unsubMsg());\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var _a = this._config, WebSocketCtor = _a.WebSocketCtor, protocol = _a.protocol, url = _a.url, binaryType = _a.binaryType;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = protocol ? new WebSocketCtor(url, protocol) : new WebSocketCtor(url);\n            this._socket = socket;\n            if (binaryType) {\n                this._socket.binaryType = binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription(function () {\n            _this._socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (evt) {\n            var _socket = _this._socket;\n            if (!_socket) {\n                socket.close();\n                _this._resetState();\n                return;\n            }\n            var openObserver = _this._config.openObserver;\n            if (openObserver) {\n                openObserver.next(evt);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber.create(function (x) {\n                if (socket.readyState === 1) {\n                    try {\n                        var serializer = _this._config.serializer;\n                        socket.send(serializer(x));\n                    }\n                    catch (e) {\n                        _this.destination.error(e);\n                    }\n                }\n            }, function (err) {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (err && err.code) {\n                    socket.close(err.code, err.reason);\n                }\n                else {\n                    observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            if (socket === _this._socket) {\n                _this._resetState();\n            }\n            var closeObserver = _this._config.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            try {\n                var deserializer = _this._config.deserializer;\n                observer.next(deserializer(e));\n            }\n            catch (err) {\n                observer.error(err);\n            }\n        };\n    };\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this._socket) {\n            this._connectSocket();\n        }\n        this._output.subscribe(subscriber);\n        subscriber.add(function () {\n            var _socket = _this._socket;\n            if (_this._output.observers.length === 0) {\n                if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n                    _socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscriber;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _socket = this._socket;\n        if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n            _socket.close();\n        }\n        this._resetState();\n        _super.prototype.unsubscribe.call(this);\n    };\n    return WebSocketSubject;\n}(AnonymousSubject));\nexport { WebSocketSubject };\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, APP_INITIALIZER, NgModule } from '@angular/core';\nimport * as i1 from '@ngxs/store';\nimport { ofActionDispatched, getValue } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\nimport { WebSocketSubject } from 'rxjs/webSocket';\nconst NGXS_WEBSOCKET_OPTIONS = new InjectionToken('NGXS_WEBSOCKET_OPTIONS');\nfunction noop(..._args) {\n  return function () {};\n}\n/**\n * Action to connect to the websocket. Optionally pass a URL.\n */\nclass ConnectWebSocket {\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nConnectWebSocket.type = '[WebSocket] Connect';\n/**\n * Action triggered when a error ocurrs\n */\nclass WebsocketMessageError {\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nWebsocketMessageError.type = '[WebSocket] Message Error';\n/**\n * Action to disconnect the websocket.\n */\nclass DisconnectWebSocket {}\nDisconnectWebSocket.type = '[WebSocket] Disconnect';\n/**\n * Action triggered when websocket is connected\n */\nclass WebSocketConnected {}\nWebSocketConnected.type = '[WebSocket] Connected';\n/**\n * Action triggered when websocket is disconnected\n */\nclass WebSocketDisconnected {}\nWebSocketDisconnected.type = '[WebSocket] Disconnected';\n/**\n * Action to send to the server.\n */\nclass SendWebSocketMessage {\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nSendWebSocketMessage.type = '[WebSocket] Send Message';\n/**\n * Action dispatched when the user tries to connect if the connection already exists.\n */\nclass WebSocketConnectionUpdated {}\nWebSocketConnectionUpdated.type = '[WebSocket] Connection Updated';\n/**\n * This error is thrown where there is no `type` (or custom `typeKey`) property\n * on the message that came from the server side socket\n */\nclass TypeKeyPropertyMissingError extends Error {\n  constructor(typeKey) {\n    super(`Property ${typeKey} is missing on the socket message`);\n  }\n}\nclass WebSocketHandler {\n  constructor(store, actions$, options) {\n    this.store = store;\n    this.actions$ = actions$;\n    this.options = options;\n    this.socket = null;\n    this.config = {\n      url: this.options.url,\n      protocol: this.options.protocol,\n      // Default binary type is `blob` for the global `WebSocket`\n      binaryType: this.options.binaryType,\n      serializer: this.options.serializer,\n      deserializer: this.options.deserializer,\n      closeObserver: {\n        next: () => {\n          // ATTENTION!\n          // See https://github.com/ReactiveX/rxjs/blob/master/src/internal/observable/dom/WebSocketSubject.ts#L340\n          // RxJS socket emits `onComplete` event only if `event.wasClean` is truthy\n          // and doesn't complete socket subject if it's falsy\n          this.disconnect();\n        }\n      },\n      openObserver: {\n        next: () => this.store.dispatch(new WebSocketConnected())\n      }\n    };\n    this.typeKey = this.options.typeKey;\n    this.subscription = new Subscription();\n    this.setupActionsListeners();\n  }\n  ngOnDestroy() {\n    this.closeConnection();\n    this.subscription.unsubscribe();\n  }\n  setupActionsListeners() {\n    this.subscription.add(this.actions$.pipe(ofActionDispatched(ConnectWebSocket)).subscribe(({\n      payload\n    }) => {\n      this.connect(payload);\n    }));\n    this.subscription.add(this.actions$.pipe(ofActionDispatched(DisconnectWebSocket)).subscribe(() => {\n      this.disconnect();\n    }));\n    this.subscription.add(this.actions$.pipe(ofActionDispatched(SendWebSocketMessage)).subscribe(({\n      payload\n    }) => {\n      this.send(payload);\n    }));\n  }\n  connect(options) {\n    this.updateConnection();\n    // Users can pass the options in the connect method so\n    // if options aren't available at DI bootstrap they have access\n    // to pass them here\n    if (options) {\n      this.mergeConfigWithOptions(options);\n    }\n    this.socket = new WebSocketSubject(this.config);\n    this.socket.subscribe({\n      next: message => {\n        const type = getValue(message, this.typeKey);\n        if (!type) {\n          throw new TypeKeyPropertyMissingError(this.typeKey);\n        }\n        this.store.dispatch(Object.assign(Object.assign({}, message), {\n          type\n        }));\n      },\n      error: error => {\n        if (error instanceof CloseEvent) {\n          this.dispatchWebSocketDisconnected();\n        } else {\n          this.store.dispatch(new WebsocketMessageError(error));\n        }\n      }\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.closeConnection();\n      this.dispatchWebSocketDisconnected();\n    }\n  }\n  send(data) {\n    if (!this.socket) {\n      throw new Error('You must connect to the socket before sending any data');\n    }\n    this.socket.next(data);\n  }\n  /**\n   * Don't enlarge the `connect` method\n   */\n  mergeConfigWithOptions(options) {\n    if (options.url) {\n      this.config.url = options.url;\n    }\n    if (options.serializer) {\n      this.config.serializer = options.serializer;\n    }\n    if (options.deserializer) {\n      this.config.deserializer = options.deserializer;\n    }\n  }\n  /**\n   * To ensure we don't have any memory leaks\n   * e.g. if the user occasionally dispatched `ConnectWebSocket` twice\n   * then the previous subscription will still live in the memory\n   * to prevent such behavior - we close the previous connection if it exists\n   */\n  updateConnection() {\n    if (this.socket) {\n      this.closeConnection();\n      this.store.dispatch(new WebSocketConnectionUpdated());\n    }\n  }\n  /**\n   * Used in many places so it's better to move the code into function\n   */\n  dispatchWebSocketDisconnected() {\n    this.store.dispatch(new WebSocketDisconnected());\n  }\n  closeConnection() {\n    // `socket.complete()` closes the connection\n    // also it doesn't invoke the `onComplete` callback that we passed\n    // into `socket.subscribe(...)`\n    if (this.socket !== null) {\n      this.socket.complete();\n      this.socket = null;\n    }\n  }\n}\n/** @nocollapse */\nWebSocketHandler.ɵfac = function WebSocketHandler_Factory(t) {\n  return new (t || WebSocketHandler)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i1.Actions), i0.ɵɵinject(NGXS_WEBSOCKET_OPTIONS));\n};\n/** @nocollapse */\nWebSocketHandler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: WebSocketHandler,\n  factory: WebSocketHandler.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WebSocketHandler, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Store\n    }, {\n      type: i1.Actions\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGXS_WEBSOCKET_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\nfunction websocketOptionsFactory(options) {\n  return Object.assign({\n    reconnectInterval: 5000,\n    reconnectAttempts: 10,\n    typeKey: 'type',\n    deserializer(e) {\n      return JSON.parse(e.data);\n    },\n    serializer(value) {\n      return JSON.stringify(value);\n    }\n  }, options);\n}\nconst USER_OPTIONS = new InjectionToken('USER_OPTIONS');\nclass NgxsWebsocketPluginModule {\n  static forRoot(options) {\n    return {\n      ngModule: NgxsWebsocketPluginModule,\n      providers: [WebSocketHandler, {\n        provide: USER_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGXS_WEBSOCKET_OPTIONS,\n        useFactory: websocketOptionsFactory,\n        deps: [USER_OPTIONS]\n      }, {\n        provide: APP_INITIALIZER,\n        useFactory: noop,\n        deps: [WebSocketHandler],\n        multi: true\n      }]\n    };\n  }\n}\n/** @nocollapse */\nNgxsWebsocketPluginModule.ɵfac = function NgxsWebsocketPluginModule_Factory(t) {\n  return new (t || NgxsWebsocketPluginModule)();\n};\n/** @nocollapse */\nNgxsWebsocketPluginModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxsWebsocketPluginModule\n});\n/** @nocollapse */\nNgxsWebsocketPluginModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxsWebsocketPluginModule, [{\n    type: NgModule\n  }], null, null);\n})();\n\n/**\n * The public api for consumers of @ngxs/websocket-plugin\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectWebSocket, DisconnectWebSocket, NGXS_WEBSOCKET_OPTIONS, NgxsWebsocketPluginModule, SendWebSocketMessage, WebSocketConnected, WebSocketConnectionUpdated, WebSocketDisconnected, WebsocketMessageError };\n"],
  "mappings": "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",
  "names": ["WebSocketSubject"]
}
